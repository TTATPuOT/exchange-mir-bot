import AbstractCommand from './AbstractCommand'
import { Context } from 'telegraf'

export default class StartCommand extends AbstractCommand {
	public readonly name: string = 'start'
	public readonly showInList: boolean = false

	async callback(ctx: Context): Promise<void> {
		let text = '–ü—Ä–∏–≤–µ—Ç! ü§©\n'
		text +=
			'ü¶Ñ –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ—á–µ–Ω—å —É–¥–æ–±–Ω–æ —É–∑–Ω–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –≤–∞–ª—é—Ç –∫–∞—Ä—Ç –ú–ò–†.\n\n'
		text +=
			'üßô –≠—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è –æ–ø–ª–∞—Ç—ã –∏–ª–∏ —Å–Ω—è—Ç–∏—è –≤ –±–∞–Ω–∫–æ–º–∞—Ç–∞—Ö –†–æ—Å—Å–∏–π—Å–∫–∏—Ö –±–∞–Ω–∫–æ–≤ –∑–∞ —Ä—É–±–µ–∂–æ–º.'
		text +=
			'–ë–æ–ª—å—à–∞—è —á–∞—Å—Ç—å –±–∞–Ω–∫–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∏–º–µ–Ω–Ω–æ —ç—Ç–æ—Ç –∫—É—Ä—Å, –Ω–æ –±—ã–≤–∞—é—Ç –∏ –∏—Å–∫–ª—é—á–µ–Ω–∏—è.\n\n'
		text += 'üíé <b>–£–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â–∏–π –∫—Ä—É—Å –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π /rates</b>'

		await ctx.reply(text, { parse_mode: 'HTML' })
	}
}
